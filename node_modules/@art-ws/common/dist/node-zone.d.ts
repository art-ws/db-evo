export interface ZoneSpec {
    name: string;
    properties?: object;
}
export declare class Zone {
    private readonly zoneData;
    private readonly zoneName;
    private readonly zoneParent;
    constructor(parent: Zone | null, spec: string | ZoneSpec | null);
    get data(): object;
    get name(): string;
    get parent(): Zone | null;
    fork(spec: ZoneSpec): Zone;
    run<T>(callback: () => T, thisArg?: any, args?: any[]): T;
    wrap(callback: () => unknown): () => unknown;
    static isEnabled(): boolean;
    static enable(): void;
    static disable(): void;
    get<T>(key: string): T | null;
    getZoneWith(key: string): Zone | null;
    static get current(): Zone;
}
//# sourceMappingURL=node-zone.d.ts.map