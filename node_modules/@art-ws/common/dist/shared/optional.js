"use strict";
// https://www.scala-lang.org/api/current/scala/Option.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.Optional = void 0;
class Optional {
    constructor(_value) {
        this._value = _value;
    }
    static isEmpty(v) {
        return v === null || v === undefined;
    }
    static of(value) {
        if (Optional.isEmpty(value))
            return Optional.none;
        if (Optional.isOptional(value))
            return value;
        return new Optional(value);
    }
    static isOptional(value) {
        return value instanceof Optional;
    }
    get value() {
        return this._value;
    }
    get isEmpty() {
        return Optional.isEmpty(this.value);
    }
    get isDefined() {
        return !this.isEmpty;
    }
    get nonEmpty() {
        return this.isDefined;
    }
    orElse(alternative) {
        return this.isDefined
            ? this
            : Optional.of(typeof alternative === "function"
                ? alternative()
                : alternative);
    }
    getOrElse(fallback) {
        return this.isDefined
            ? this.value
            : typeof fallback === "function"
                ? fallback()
                : fallback;
    }
    map(f) {
        return Optional.of(f(this.value));
    }
    flatMap(f) {
        return f(this.value);
    }
    forEach(f) {
        if (this.isDefined)
            f(this.value);
    }
    fold(ifEmpty, f) {
        if (this.isEmpty)
            return typeof ifEmpty === "function" ? ifEmpty() : ifEmpty;
        return typeof f === "function" ? f(this.value) : this.value;
    }
    contains(value) {
        return this.isEmpty ? false : this.value === value;
    }
}
exports.Optional = Optional;
Optional.none = new Optional(null);
//# sourceMappingURL=optional.js.map