import { Logger } from "./types";
export declare const Class: FunctionConstructor;
export declare type Class<T = object> = new (...args: unknown[]) => T;
export declare class AssertDSL {
    o: object;
    private readonly value;
    private readonly name;
    constructor(o: object);
    typeOf(type: string): this;
    string(): this;
    defined(): this;
    eq(val: unknown): this;
}
export declare function className(classProto: Class<any>): string;
export declare type LoggerArg = string | Class<unknown>;
export declare function getCallerFilename(e4: string): string;
export declare function getLogger(categoryOrClass?: LoggerArg): Logger;
//# sourceMappingURL=logger.d.ts.map