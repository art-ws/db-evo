import { ILogDelegate, LogEntry, Logger, LogLevel } from "./types";
export declare class LoggerImpl implements Logger {
    manager: LogManager;
    category: string;
    constructor(manager: LogManager, category: string);
    private _log;
    private _isEnabled;
    isTraceEnabled(): boolean;
    trace(...args: any): void;
    isDebugEnabled(): boolean;
    debug(...args: any): void;
    isInfoEnabled(): boolean;
    info(...args: any): void;
    isWarnEnabled(): boolean;
    warn(...args: any): void;
    isErrorEnabled(): boolean;
    error(...args: any): void;
    isFatalEnabled(): boolean;
    fatal(...args: any): void;
    logError(error: Error, message?: string): void;
}
export declare class LogManager {
    static instance: LogManager;
    static getDefaultDelegate(): ILogDelegate;
    delegate?: ILogDelegate;
    constructor();
    setDelegate(delegate: ILogDelegate): void;
    static silent(): void;
    emit(e: LogEntry): void;
    isCategoryLevelEnabled(category: string, level: LogLevel): boolean;
}
//# sourceMappingURL=manager.d.ts.map